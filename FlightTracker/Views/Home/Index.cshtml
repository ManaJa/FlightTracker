@{
    ViewBag.Title = "Flight Tracker";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Flight Tracker</h2>
@*<select id="ddAirport" onchange="refreshData(this)">
	@foreach (var track in ViewBag.FlightTracks) { 
		<option origin="@track.OriginPort" dest="@track.DestinationPort">@track.PortPair</option>
	}
</select>
<button type="button" style="display:none;" onclick="refreshData(this)">Refresh</button>*@
<button type="button" onclick="drawTracks(this)">Display All flight Track</button>
<button type="button" onclick="clearMap(this)">Clear map</button> 

@*<div><span style="font-size:large;display:none;">Origin Airport :</span><span id="originInfoNode">loading...</span></div>
<div><span style="font-size:large;display:none;">Destination Airport :</span><span id="destinInfoNode">loading...</span></div>*@
<hr />
<div id="map-canvas">Flight tracker map loading...</div>

<script type="text/javascript">
	window.preloadTracks = @Html.Raw(@ServiceStack.Text.JsonSerializer.SerializeToString(ViewBag.FlightTracks));
	window.preloadAirPortInfos = @Html.Raw(@ServiceStack.Text.JsonSerializer.SerializeToString(ViewBag.AirportInfos));

    window.mapLines = new Array();
    window.mapMarkers = new Array();

    function addLine(originLatLong, destLatLong) {
        var flightTracksCoordinates = new Array();
        flightTracksCoordinates.push(new google.maps.LatLng(originLatLong.lat, originLatLong.long));
        flightTracksCoordinates.push(new google.maps.LatLng(destLatLong.lat, destLatLong.long));

        var flightPath = new google.maps.Polyline({
            path: flightTracksCoordinates,
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 2
        });
        flightPath.setMap(map);

        window.mapLines.push(flightPath);
    }

    function clearMap(){
        clearMapLine();
        clearMapMarker();
    }

    function clearMapLine(){
        window.mapLines.forEach(function(item){
            item.setMap(null);
        });
    }

    function addMarker(obj){
        var myLatlng = new google.maps.LatLng(obj.lat, obj.long);
        var mapOptions = {
            zoom: 4,
            center: myLatlng
        }
        var marker = new google.maps.Marker({
            position: myLatlng,
            map: map,
            title: obj.title
        });    

        window.mapMarkers.push(marker);
    }
    function clearMapMarker(){
        window.mapMarkers.forEach(function(item){
            item.setMap(null);
        });
    }

    window.getAirPortInfo = function(code){
        var infos = window.preloadAirPortInfos.filter(function(item){ return item.airportCode == code?true:false;});
        if(infos.length>0) return infos[0];
        else return {};
    }

    window.drawTracks = function(){

        var markers = new Array();
        window.preloadTracks.forEach(function(eachItem, idx){

            var oriInfo = window.getAirPortInfo(eachItem.originPort);
            var desinfo = window.getAirPortInfo(eachItem.destinationPort);
            //oriInfo.cityOrAirportName
            //oriInfo.latitudeDecimalDegree
            //oriInfo.longtitudeDecimalDegree
            //oriInfo.country

            if(!oriInfo || !desinfo) return;


            var lashift = 0;//-0.455;
            var longshift = 0;//0.689;
            
            var orgLatLong = {lat: oriInfo.latitudeDecimalDegree, long: oriInfo.longtitudeDecimalDegree};
            var desLatLong = {lat: desinfo.latitudeDecimalDegree, long: desinfo.longtitudeDecimalDegree};
            addLine(orgLatLong, desLatLong);

            markers.push({lat: oriInfo.latitudeDecimalDegree + lashift, 
                long: oriInfo.longtitudeDecimalDegree + longshift,
                          title: oriInfo.cityOrAirportName + '(' + oriInfo.country + ')'
                        });
            markers.push({lat: desinfo.latitudeDecimalDegree + lashift, 
                long: desinfo.longtitudeDecimalDegree + longshift,
                          title: desinfo.cityOrAirportName + '(' + desinfo.country + ')'
                        });        
        });
         
        markers.forEach(function(eachMarker){
            addMarker(eachMarker);
        });
    }

	window.refreshData = function(e){
		$('#ddAirport').each(function(index, elem){
			$.each(elem.selectedOptions, function(index2, elem2){
				var origin = elem2.attributes['origin'].value;
				var dest  = elem2.attributes['dest'].value;
				displayOrigin(origin);
				displayDestin(dest);
			});
		});
	};

	window.displayOrigin = function(code){
		$.getJSON('api/airportinfo/'+ code)
		.done(function(data) {
			console.log( data );
			displayInfomation($('#originInfoNode')[0], data);

		})
		.fail(function(e) {
			console.log(e);
			$('#originInfoNode')[0].innerHTML = "loading error...";
		});
		$('#originInfoNode')[0].innerHTML = "loading...";
	};

	window.displayDestin = function(code){
		$.getJSON('api/airportinfo/'+ code)
		.done(function(data) {
			console.log( data );
			displayInfomation($('#destinInfoNode')[0], data);
		})
		.fail(function(e) {
			console.log(e);
			$('#destinInfoNode')[0].innerHTML = "loading error...";
		});	
		$('#destinInfoNode')[0].innerHTML = "loading...";
	};

	window.displayInfomation = function(node, data){
		node.innerHTML = JSON.stringify(data);
	}
	
</script>

@*@section DocumentReady {
		window.refreshData();
}*@
@section GoogleMap {
<script type="text/javascript">
    var map;
    var myLatlng = new google.maps.LatLng(-25.363882,131.044922);
    var mapOptions = {
        zoom: 4,
        center: myLatlng
    }
	function initialize() {
		map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
	}

	google.maps.event.addDomListener(window, 'load', initialize);	
</script>	
}